{"version":3,"sources":["queryClient.ts","reportWebVitals.ts","token.tsx","stomp.tsx","config.ts","components/Page.tsx","components/Guard.tsx","components/guards/NotAuthenticatedGuard.tsx","pages/SignInPage/SignInPage.tsx","components/guards/AuthenticatedGuard.tsx","pages/MainPage/MainPage.tsx","pages/RedirectingPage/RedirectingPage.tsx","routes.tsx","components/App.tsx","index.tsx"],"names":["QueryKey","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","TokenContext","React","createContext","token","undefined","setToken","useToken","useContext","TokenProvider","children","ContextProvider","Provider","savedToken","useMemo","localStorage","getItem","useState","setTokenState","useCallback","setItem","removeItem","ctx","queryClient","useQueryClient","useEffect","clear","value","StompContext","subscribe","Error","publish","callbackWrapper","subscription","message","active","callback","buffer","push","StompProvider","stompRef","useRef","publishQueueRef","subscriptionsRef","Map","stomp","Client","connectHeaders","webSocketFactory","SockJS","onConnect","current","forEach","subscriptionId","topic","id","params","activate","deactivate","context","existingSubscription","get","connected","unsubscribe","set","Page","className","title","onClick","Helmet","Guard","visible","redirectUrl","to","NotAuthenticatedGuard","cnSignInPage","cn","SignInPage","classname","Container","Row","Col","xs","span","offset","Card","Header","Text","Button","href","variant","AuthenticatedGuard","cnMainPage","MainPage","RedirectingPage","location","useLocation","useHistory","URLSearchParams","search","routes","path","exact","QueryClient","App","client","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6KAGYA,E,iCCWGC,G,MAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,yDCEDQ,EAAeC,IAAMC,cAAgC,CAC9DC,WAAOC,EACPC,SAAU,eAGDC,EAAW,kBAAMC,qBAAWP,IAE5BQ,EAA0B,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAChCC,EAAkBV,EAAaW,SAE/BC,EAAaC,mBAAQ,kBAAMC,aAAaC,QAAQ,eAAYX,IAAW,IAC7E,EAA+BY,mBAAoBJ,GAAnD,mBAAOT,EAAP,KAAcc,EAAd,KAEMZ,EAAWa,uBAAY,SAACf,GACtBA,EACAW,aAAaK,QAAQ,QAAShB,GAE9BW,aAAaM,WAAW,SAG5BH,EAAcd,KACf,IAEGkB,EAAMR,mBAAQ,iBAAO,CAAEV,QAAOE,cAAa,CAACF,EAAOE,IAEnDiB,EAAcC,2BAOpB,OANAC,qBAAU,gBACQpB,IAAVD,GACAmB,EAAYG,UAEjB,CAACH,EAAanB,IAGb,cAACO,EAAD,CAAiBgB,MAAOL,EAAxB,SACKZ,KCvBPkB,EAAe1B,IAAMC,cAAgC,CACvD0B,UAAW,WAAQ,MAAM,IAAIC,OAC7BC,QAAS,eAKPC,EAAkB,SAACC,GAAD,OAA0D,SAAAC,GAC1ED,EAAaE,OACbF,EAAaG,SAASF,GAEtBD,EAAaI,OAAOC,KAAKJ,KAIpBK,EAA0B,SAAC,GAAkB,IAAhB7B,EAAe,EAAfA,SAChCC,EAAkBiB,EAAahB,SAE7BR,EAAUG,IAAVH,MACFoC,EAAWC,mBACXC,EAAkBD,iBAAyB,IAC3CE,EAAmBF,iBAAO,IAAIG,KAEpCnB,qBAAU,WACN,GAAKrB,EAAL,CAIA,IAAMyC,EAAQ,IAAIC,IAAO,CACrBC,eAAgB,CACZ,kBAAmB3C,GAEvB4C,iBAAkB,kBAAM,IAAIC,IAAJ,UCrDb,GDqDa,SACxBC,UAAW,WACPP,EAAiBQ,QAAQC,SAAQ,SAAAnB,GAC7BA,EAAaoB,eAAiBR,EAAMhB,UAAUI,EAAaqB,MAAOtB,EAAgBC,IAAesB,MAGrGb,EAAgBS,QAAQC,SAAQ,SAAAI,GAAM,OAAIX,EAAMd,QAAQyB,MACxDd,EAAgBS,QAAU,MAOlC,OAHAN,EAAMY,WACNjB,EAASW,QAAUN,EAEZ,WAAO,IAAD,EACT,UAAAL,EAASW,eAAT,SAAkBO,aAClBlB,EAASW,aAAU9C,MAExB,CAACD,IAEJ,IAAMuD,EAA4B7C,mBAAQ,iBAAO,CAC7Ce,UAAW,SAAC0B,EAAID,EAAOlB,GACnB,IAAMwB,EAAuBjB,EAAiBQ,QAAQU,IAAIN,GAE1D,GAAKK,EAYE,IAAIA,EAAqBzB,OAG5B,OAAO,aAQoC,IAAD,EAN1CyB,EAAqBxB,SAAWA,EAEhCwB,EAAqBzB,QAAS,EAC9ByB,EAAqBvB,OAAOe,QAAQhB,GACpCwB,EAAqBvB,OAAS,GAE1BuB,EAAqBN,QAAUA,IAC/BM,EAAqBN,MAAQA,GAEzB,UAAAd,EAASW,eAAT,eAAkBW,iBAAqDzD,IAAxCuD,EAAqBP,iBACpDb,EAASW,QAAQY,YAAYH,EAAqBP,gBAElDO,EAAqBP,eAAiBb,EAASW,QAAQtB,UAAUyB,EAAOtB,EAAgB4B,IAAuBL,KAIvH,OAAO,WACHK,EAAqBzB,QAAS,GAlCV,IAAD,EACjBF,EAAkC,CAAEqB,QAAOlB,WAAUD,QAAQ,EAAME,OAAQ,IAQjF,OANAM,EAAiBQ,QAAQa,IAAIT,EAAItB,IAEjC,UAAIO,EAASW,eAAb,aAAI,EAAkBW,aAClB7B,EAAaoB,eAAiBb,EAASW,QAAQtB,UAAUyB,EAAOtB,EAAgBC,IAAesB,IAG5F,WACHtB,EAAaE,QAAS,IA6BlCJ,QAAS,SAAAyB,GAAW,IAAD,GACf,UAAIhB,EAASW,eAAb,aAAI,EAAkBW,WAClBtB,EAASW,QAAQpB,QAAQyB,GAEzBd,EAAgBS,QAAQb,KAAKkB,OAGrC,IAEJ,OACI,cAAC7C,EAAD,CAAiBgB,MAAOgC,EAAxB,SACKjD,K,6EEtHAuD,EAA4B,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,UAAWC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,QAAS1D,EAAe,EAAfA,SACnE,OACI,sBAAK0D,QAASA,EAASF,UAAS,sBAAUA,QAAV,IAAUA,IAAa,IAAvD,UACI,cAACG,EAAA,EAAD,UACI,gCACKF,EAAK,oBACWA,GAEb,cAKXzD,MCdA4D,G,OAA8B,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,QAASC,EAA4B,EAA5BA,YAAa9D,EAAe,EAAfA,SAChE,OAAI6D,EACO,mCAAG7D,SAGML,IAAhBmE,EACO,cAAC,IAAD,CAAUC,GAAID,IAGlB,OCREE,EAA8D,SAAC,GAA+B,IAA7BF,EAA4B,EAA5BA,YAAa9D,EAAe,EAAfA,SAC/EN,EAAUG,IAAVH,MAER,OACI,cAAC,EAAD,CAAOmE,aAAmBlE,IAAVD,EAAqBoE,YAAaA,EAAlD,SACK9D,KCCPiE,EAAeC,aAAG,cAEXC,EAAwC,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAEpD,OACI,cAAC,EAAD,CAAuBN,YAAY,IAAnC,SACI,cAAC,EAAD,CAAMN,UAAWS,EAAa,KAAM,CAACG,IAAaX,MAAM,UAAxD,SACI,cAACY,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAKd,UAAU,4BAAf,SACI,cAACe,EAAA,EAAD,CAAKC,GAAI,CAAEC,KAAM,EAAGC,OAAQ,GAA5B,SACI,eAACC,EAAA,EAAD,WACI,cAACA,EAAA,EAAKC,OAAN,2BACA,eAACD,EAAA,EAAKE,KAAN,CAAWrB,UAAU,mBAArB,UACI,eAACsB,EAAA,EAAD,CAAQC,KAAI,UJ5BzB,GI4ByB,gCAA4CC,QAAQ,eAAhE,UAA+E,sBAC3ExB,UAAU,eADiE,oBAA/E,IAC2C,cAAC,IAAD,OAC3C,eAACsB,EAAA,EAAD,CAAQC,KAAI,UJ9BzB,GI8ByB,kCACJC,QAAQ,eADhB,UAC+B,sBAC3BxB,UAAU,eADiB,sBACa,cAAC,IAAD,OAC5C,eAACsB,EAAA,EAAD,CAAQC,KAAI,UJjCzB,GIiCyB,gCAA4CC,QAAQ,eAAhE,UAA+E,sBAC3ExB,UAAU,eADiE,oBAA/E,IAC2C,cAAC,IAAD,wBCzBlEyB,G,OAAwD,SAAC,GAA+B,IAA7BnB,EAA4B,EAA5BA,YAAa9D,EAAe,EAAfA,SACzEN,EAAUG,IAAVH,MAER,OACI,cAAC,EAAD,CAAOmE,aAAmBlE,IAAVD,EAAqBoE,YAAaA,EAAlD,SACK9D,MCFPkF,EAAahB,aAAG,YAETiB,EAAoC,SAAC,GAAmB,IAAjBf,EAAgB,EAAhBA,UAEhD,OACI,cAAC,EAAD,CAAoBN,YAAY,UAAhC,SACI,cAAC,EAAD,CAAMN,UAAW0B,EAAW,KAAM,CAACd,IAAaX,MAAO,GAAvD,SACI,cAACY,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,aCZXa,EAAkD,SAAC,GAAkB,EAAhBhB,UAAiB,IACvExE,EAAaC,IAAbD,SACFyF,EAAWC,cACDC,cAWhB,OATAxE,qBAAU,WACN,IACMrB,EADc,IAAI8F,gBAAgBH,EAASI,QACvBtC,IAAI,SAE1BzD,GACAE,EAASF,KAEd,CAAC2F,EAASI,OAAQ7F,IAGjB,cAAC,EAAD,CAAuBkE,YAAY,IAAnC,SACI,cAAC,EAAD,gCCpBC4B,EACT,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,KAAK,UAAUC,OAAK,EAA3B,SACI,cAAC,EAAD,MAGJ,cAAC,IAAD,CAAOD,KAAK,IAAIC,OAAK,EAArB,SACI,cAAC,EAAD,MAGJ,cAAC,IAAD,CAAOD,KAAK,YAAYC,OAAK,EAA7B,SACI,cAAC,EAAD,SZdA/G,M,IAGL,IAAMgC,EAAc,IAAIgF,caOlBC,G,OAAgB,WACzB,OACI,cAAC,sBAAD,CAAqBC,OAAQlF,EAA7B,SACI,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,IAAD,UACK6E,YCbzBM,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BtH,K","file":"static/js/main.5cf5b0eb.chunk.js","sourcesContent":["import { QueryClient } from 'react-query';\n\n\nexport enum QueryKey {\n}\n\nexport const queryClient = new QueryClient();","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useCallback, useContext, useEffect, useMemo, useState } from 'react';\nimport { useQueryClient } from 'react-query';\n\n\nexport type TokenType = string | undefined;\n\nexport interface TokenContextType {\n    token: TokenType;\n    setToken: (token: TokenType) => void;\n}\n\nexport const TokenContext = React.createContext<TokenContextType>({\n    token: undefined,\n    setToken: () => {},\n});\n\nexport const useToken = () => useContext(TokenContext);\n\nexport const TokenProvider: React.FC = ({ children }) => {\n    const ContextProvider = TokenContext.Provider;\n\n    const savedToken = useMemo(() => localStorage.getItem('token') || undefined, []);\n    const [token, setTokenState] = useState<TokenType>(savedToken);\n\n    const setToken = useCallback((token: TokenType) => {\n        if (token) {\n            localStorage.setItem('token', token);\n        } else {\n            localStorage.removeItem('token');\n        }\n\n        setTokenState(token);\n    }, []);\n\n    const ctx = useMemo(() => ({ token, setToken }), [token, setToken]);\n\n    const queryClient = useQueryClient();\n    useEffect(() => {\n        if (token === undefined) {\n            queryClient.clear();\n        }\n    }, [queryClient, token]);\n\n    return (\n        <ContextProvider value={ctx}>\n            {children}\n        </ContextProvider>\n    );\n};\n","import React, { useContext, useEffect, useMemo, useRef } from 'react';\nimport SockJS from 'sockjs-client';\nimport { Client, IMessage, IPublishParams, messageCallbackType } from '@stomp/stompjs';\n\nimport { baseUrl } from './config';\nimport { useToken } from './token';\n\n\ninterface StompContextType {\n    subscribe(id: string, topic: string, callback: messageCallbackType): () => void;\n    publish(params: IPublishParams): void;\n}\n\ninterface StompSubscription {\n    topic: string;\n    callback: messageCallbackType;\n\n    active: boolean;\n    buffer: IMessage[];\n    subscriptionId?: string;\n}\n\nconst StompContext = React.createContext<StompContextType>({\n    subscribe: () => { throw new Error(); },\n    publish: () => {},\n});\n\nexport const useStomp = (): StompContextType => useContext(StompContext);\n\nconst callbackWrapper = (subscription: StompSubscription): messageCallbackType => message => {\n    if (subscription.active) {\n        subscription.callback(message);\n    } else {\n        subscription.buffer.push(message);\n    }\n};\n\nexport const StompProvider: React.FC = ({ children }) => {\n    const ContextProvider = StompContext.Provider;\n\n    const { token } = useToken();\n    const stompRef = useRef<Client | undefined>();\n    const publishQueueRef = useRef<IPublishParams[]>([]);\n    const subscriptionsRef = useRef(new Map<string, StompSubscription>());\n\n    useEffect(() => {\n        if (!token) {\n            return;\n        }\n\n        const stomp = new Client({\n            connectHeaders: {\n                'X-Authorization': token,\n            },\n            webSocketFactory: () => new SockJS(`${baseUrl}/ws`),\n            onConnect: () => {\n                subscriptionsRef.current.forEach(subscription => {\n                    subscription.subscriptionId = stomp.subscribe(subscription.topic, callbackWrapper(subscription)).id;\n                });\n\n                publishQueueRef.current.forEach(params => stomp.publish(params));\n                publishQueueRef.current = [];\n            },\n        });\n\n        stomp.activate();\n        stompRef.current = stomp;\n\n        return () => {\n            stompRef.current?.deactivate();\n            stompRef.current = undefined;\n        };\n    }, [token]);\n\n    const context: StompContextType = useMemo(() => ({\n        subscribe: (id, topic, callback) => {\n            const existingSubscription = subscriptionsRef.current.get(id);\n\n            if (!existingSubscription) {\n                const subscription: StompSubscription = { topic, callback, active: true, buffer: [] };\n\n                subscriptionsRef.current.set(id, subscription);\n\n                if (stompRef.current?.connected) {\n                    subscription.subscriptionId = stompRef.current.subscribe(topic, callbackWrapper(subscription)).id;\n                }\n\n                return () => {\n                    subscription.active = false;\n                };\n            } else if (existingSubscription.active) {\n                // do nothing\n\n                return () => {};\n            } else {\n                existingSubscription.callback = callback;\n\n                existingSubscription.active = true;\n                existingSubscription.buffer.forEach(callback);\n                existingSubscription.buffer = [];\n\n                if (existingSubscription.topic !== topic) {\n                    existingSubscription.topic = topic;\n\n                    if (stompRef.current?.connected && existingSubscription.subscriptionId !== undefined) {\n                        stompRef.current.unsubscribe(existingSubscription.subscriptionId);\n\n                        existingSubscription.subscriptionId = stompRef.current.subscribe(topic, callbackWrapper(existingSubscription)).id;\n                    }\n                }\n\n                return () => {\n                    existingSubscription.active = false;\n                };\n            }\n        },\n\n        publish: params => {\n            if (stompRef.current?.connected) {\n                stompRef.current.publish(params);\n            } else {\n                publishQueueRef.current.push(params);\n            }\n        },\n    }), []);\n\n    return (\n        <ContextProvider value={context}>\n            {children}\n        </ContextProvider>\n    );\n};\n","// export const baseUrl = 'http://localhost:8080';\nexport const baseUrl = '';\n","import React from 'react';\nimport { Helmet } from 'react-helmet';\n\nexport interface PageProps {\n    className?: string;\n    title?: string;\n\n    onClick?: React.MouseEventHandler;\n}\n\nexport const Page: React.FC<PageProps> = ({ className, title, onClick, children }) => {\n    return (\n        <div onClick={onClick} className={`Page ${className ?? ''}`}>\n            <Helmet>\n                <title>\n                    {title ? (\n                        `Reviews - ${title}`\n                    ) : (\n                        'Reviews'\n                    )}\n                </title>\n            </Helmet>\n\n            {children}\n        </div>\n    );\n};","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\n\nexport interface GuardProps {\n    visible: boolean;\n    redirectUrl?: string;\n}\n\nexport const Guard: React.FC<GuardProps> = ({ visible, redirectUrl, children }) => {\n    if (visible) {\n        return <>{children}</>;\n    }\n\n    if (redirectUrl !== undefined) {\n        return <Redirect to={redirectUrl} />;\n    }\n\n    return null;\n};","import React from 'react';\n\nimport { useToken } from '../../token';\nimport { Guard } from '../Guard';\n\n\nexport interface NotAuthenticatedGuardProps {\n    redirectUrl?: string;\n}\n\nexport const NotAuthenticatedGuard: React.FC<NotAuthenticatedGuardProps> = ({ redirectUrl, children }) => {\n    const { token } = useToken();\n\n    return (\n        <Guard visible={token === undefined} redirectUrl={redirectUrl}>\n            {children}\n        </Guard>\n    );\n};","import React from 'react';\n\nimport { Button, Card, Col, Container, Row } from 'react-bootstrap';\nimport { BsFacebook, BsGithub, BsGoogle } from 'react-icons/all';\nimport { cn } from '@bem-react/classname';\n\nimport { Page } from '../../components/Page';\n\nimport './SignInPage.css';\nimport { baseUrl } from '../../config';\nimport { NotAuthenticatedGuard } from '../../components/guards/NotAuthenticatedGuard';\n\nexport interface SignInPageProps {\n    classname?: string;\n}\n\nconst cnSignInPage = cn('SignInPage');\n\nexport const SignInPage: React.FC<SignInPageProps> = ({ classname }) => {\n\n    return (\n        <NotAuthenticatedGuard redirectUrl=\"/\">\n            <Page className={cnSignInPage(null, [classname])} title=\"Sign in\">\n                <Container>\n                    <Row className=\"d-flex align-items-center\">\n                        <Col xs={{ span: 4, offset: 3 }}>\n                            <Card>\n                                <Card.Header>Sign in with</Card.Header>\n                                <Card.Text className=\"d-grid gap-2 p-2\">\n                                    <Button href={`${baseUrl}/oauth2/authorization/github`} variant=\"outline-dark\"><span\n                                        className=\"align-middle\">GitHub</span> <BsGithub/></Button>\n                                    <Button href={`${baseUrl}/oauth2/authorization/facebook`}\n                                            variant=\"outline-dark\"><span\n                                        className=\"align-middle\">Facebook</span><BsFacebook/></Button>\n                                    <Button href={`${baseUrl}/oauth2/authorization/google`} variant=\"outline-dark\"><span\n                                        className=\"align-middle\">Google</span> <BsGoogle/></Button>\n                                </Card.Text>\n                            </Card>\n                        </Col>\n                    </Row>\n                </Container>\n            </Page>\n        </NotAuthenticatedGuard>\n    );\n};","import React from 'react';\n\nimport { useToken } from '../../token';\nimport { Guard } from '../Guard';\n\n\nexport interface AuthenticatedGuardProps {\n    redirectUrl?: string;\n}\n\nexport const AuthenticatedGuard: React.FC<AuthenticatedGuardProps> = ({ redirectUrl, children }) => {\n    const { token } = useToken();\n\n    return (\n        <Guard visible={token !== undefined} redirectUrl={redirectUrl}>\n            {children}\n        </Guard>\n    );\n};","import React from 'react';\n\nimport { Page } from '../../components/Page';\nimport { Col, Container, Row } from 'react-bootstrap';\nimport { cn } from '@bem-react/classname';\n\nimport './MainPage.css';\nimport { AuthenticatedGuard } from '../../components/guards/AuthenticatedGuard';\n\nexport interface MainPageProps {\n    classname?: string;\n}\n\nconst cnMainPage = cn('MainPage');\n\nexport const MainPage: React.FC<MainPageProps> = ({ classname }) => {\n\n    return (\n        <AuthenticatedGuard redirectUrl=\"/signIn\">\n            <Page className={cnMainPage(null, [classname])} title={''}>\n                <Container>\n                    <Row>\n                        <Col>\n\n                        </Col>\n                    </Row>\n                </Container>\n            </Page>\n        </AuthenticatedGuard>\n    );\n};","import React, { useEffect } from 'react';\nimport { Page } from '../../components/Page';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { useToken } from '../../token';\nimport { NotAuthenticatedGuard } from '../../components/guards/NotAuthenticatedGuard';\n\nexport interface RedirectingPageProps {\n    classname?: string;\n}\n\nexport const RedirectingPage: React.FC<RedirectingPageProps> = ({ classname }) => {\n    const { setToken } = useToken();\n    const location = useLocation();\n    const history = useHistory();\n\n    useEffect(() => {\n        const queryParams = new URLSearchParams(location.search);\n        const token = queryParams.get('token');\n\n        if (token) {\n            setToken(token);\n        }\n    }, [location.search, setToken]);\n\n    return (\n        <NotAuthenticatedGuard redirectUrl=\"/\">\n            <Page>\n                Redirecting...\n            </Page>\n        </NotAuthenticatedGuard>\n    );\n};","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { SignInPage } from './pages/SignInPage/SignInPage';\nimport { MainPage } from './pages/MainPage/MainPage';\nimport { RedirectingPage } from './pages/RedirectingPage/RedirectingPage';\n\nexport const routes: React.ReactNode = (\n    <Switch>\n        <Route path=\"/signIn\" exact>\n            <SignInPage/>\n        </Route>\n\n        <Route path=\"/\" exact>\n            <MainPage/>\n        </Route>\n\n        <Route path=\"/redirect\" exact>\n            <RedirectingPage/>\n        </Route>\n    </Switch>\n)","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { QueryClientProvider } from 'react-query';\n\n\nimport { StompProvider } from '../stomp';\nimport { routes } from '../routes';\nimport { queryClient } from '../queryClient';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { TokenProvider } from '../token';\n\n\nexport const App: React.FC = () => {\n    return (\n        <QueryClientProvider client={queryClient}>\n            <TokenProvider>\n                <StompProvider>\n                    <BrowserRouter>\n                        {routes}\n                    </BrowserRouter>\n                </StompProvider>\n            </TokenProvider>\n        </QueryClientProvider>\n    );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport { App } from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}